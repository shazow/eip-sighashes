function targetContract() returns (address)
function decisionAssembly() returns (address)
function reduceIssuance(uint)
function changeTargetContract(address)
function executeDecision(uint)
function identityOwner(address identity) public view returns(address)
function changeOwner(address identity, address newOwner)
function changeOwnerSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, address newOwner)
function validDelegate(address identity, bytes32 delegateType, address delegate) public view returns(bool)
function addDelegate(address identity, bytes32 delegateType, address delegate, uint validity)
function addDelegateSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 delegateType, address delegate, uint validity)
function revokeDelegate(address identity, bytes32 delegateType, address delegate)
function revokeDelegateSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 delegateType, address delegate)
function setAttribute(address identity, bytes32 name, bytes value, uint validity)
function setAttributeSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 name, bytes value, uint validity)
function revokeAttribute(address identity, bytes32 name, bytes value)
function revokeAttributeSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 name, bytes value)
function setMultihash(bytes32 node, bytes hash) public only_owner(node)
function multihash(bytes32 node) public view returns (bytes)
function isInt(uint num) public pure returns (byte status)
function safeIncrement(uint8 interval) public returns (byte status, uint8 newCounter)
function increase() public returns (bool _available)
function increase() public returns (byte _status)
function appCode(Sleep _state) returns (byte code)
function appCode(Sleep _state) returns (byte code)
function executeGasRelay(bytes calldata _execData, uint256 _gasPrice, uint256 _gasLimit, address _gasToken, address _gasRelayer, bytes calldata _signature)
function executeGasRelayMsg(uint256 _nonce, bytes memory _execData, uint256 _gasPrice, uint256 _gasLimit, address _gasToken, address _gasRelayer) public pure returns (bytes memory)
function executeGasRelayERC191Msg(uint256 _nonce, bytes memory _execData, uint256 _gasPrice, uint256 _gasLimit, address _gasToken, address _gasRelayer) public view returns (bytes memory)
function lastNonce() public returns (uint nonce)
function claimLost(address lostAccount) returns (bool success)
function claimLost() returns (bool success)
function reportStolen() returns (bool success)
function chargeback(uint256 pendingTransferNumber) returns (bool success)
function getPendingTransferTime(address account) view returns (uint256 minutes)
function setPendingTransferTime(uint256 minutes) returns (bool success)
function getLostAccountRecoveryTimeInMinutes(address account) view returns (uint256 minutes)
function setLostAccountRecoveryTimeInMinutes(uint256 minutes) returns (bool success)
function theNumberOfAnnouncements() public constant returns(uint256 _numberOfAnnouncements)
function readPosts(uint256 _postNumber) public constant returns(string _author, string _post)
function givePostingPermission(address _newAnnouncer, bool _postingPrivileges, string _posterName) public onlyOwner returns(bool success)
function postAnnouncement(string _message)
function removeAnnouncement(uint256 _messageNumber, string _removalReason)
function lock(bytes32 _reason, uint256 _amount, uint256 _time) public returns (bool)
function totalBalanceOf(address _of)  view returns (uint256 amount)
function createWallet() public returns (address _wallet)
function isWallet(address _wallet) public constant returns (bool)
function createShop(address _erc20) public returns (address _shop)
function isShop(address _shop) public constant returns (bool)
function balanceOf(address _erc20) public constant returns (uint256 balance)
function withdrawal(address _erc20, uint256 _value) onlyOwner public returns (bool success)
function paySafe(address _shop, uint256 _item) onlyOwner onlyShop(_shop) public payable returns (bool success)
function payUnsafe(address _shop, uint256 _item) onlyOwner public payable returns (bool success)
function payCancel(address _shop, uint256 _item) onlyOwner public returns (bool success)
function refund(uint256 _item, uint256 _value) public payable returns (bool success)
function balanceOf(address _erc20) public constant returns (uint256 balance)
function withdrawal(address _erc20, uint256 _value) onlyOwner public returns (bool success)
function pay(uint256 _item) onlyWallet(msg.sender) public payable returns (bool success)
function refund(address _buyer, uint256 _item, uint256 _value) onlyWallet(_buyer) onlyOwner public payable returns (bool success)
function resister(uint8 _category, uint256 _price, uint256 _stock) onlyOwner public returns (uint256 _itemId)
function update(uint256 _item, uint256 _price, uint256 _stock)
function price(uint256 _item) public constant returns (address _erc20, uint256 _value)
function canBuy(address _who, uint256 _item) public constant returns (bool _canBuy)
function isBuyer(address _who, uint256 _item) public constant returns (bool _buyer)
function info(bytes _msgPack)
function upVote()
function dnVote()
function about() view returns (address _erc20, uint256 _up, uint256 _down)
function infoItem(uint256 _item, bytes _msgPack)
function upVoteItem(uint256 _item)
function dnVoteItem(uint256 _item)
function aboutItem(uint256 _item) view returns (uint256 _price, uint256 _up, uint256 _down)
function name() constant returns (string name)
function className(uint256 classId) constant returns (string name)
function symbol() constant returns (string symbol)
function totalSupply() constant returns (uint256 totalSupply)
function individualSupply(uint256 _classId) constant returns (uint256 individualSupply)
function balanceOf(address _owner, uint256 _classId) constant returns (uint256 balance)
function classesOwned(address _owner) constant returns (uint256[] classes)
function approve(address _to, uint256 _classId, uint256 quantity)
function transfer(address _to, uint256 _classId, uint256 quantity)
function approveForToken(uint256 classIdHeld, uint256 quantityHeld, uint256 classIdWanted, uint256 quantityWanted)
function exchange(address to, uint256 classIdPosted, uint256 quantityPosted, uint256 classIdWanted, uint256 quantityWanted)
function updateCallableFuncNames(string _invokes) public returns (bool success)
function grant(address _grantee, string _invokes, uint _expireAt) public returns (bool success)
function regrant(address _grantee, string _invokes, uint _expireAt) public returns (bool success)
function revoke(address _grantee) public returns (bool success)
function approve(address _spender, uint256 _value) public returns (bool success)
function approve(address _spender, uint256 _value, address _authorizer) public returns (bool success)
function generateReleaseId(string packageName, string version)
function release(string packageName, string version, string manifestURI)
function getAllPackageIds(uint offset, uint limit)
function getPackageName(bytes32 packageId) public view returns (string packageName)
function getReleaseId(string packageName, string version) public view returns (bytes32 releaseId)
function getAllReleaseIds(string packageName, uint offset, uint limit)
function getReleaseData(bytes32 releaseId)
function generateReleaseId(string packageName, string version)
function numPackageIds() public view returns (uint totalCount)
function numReleaseIds(string packageName) public view returns (uint totalCount)
function owner(bytes32 node) constant returns (address)
function resolver(bytes32 node) constant returns (address)
function ttl(bytes32 node) constant returns (uint64)
function setOwner(bytes32 node, address owner)
function setSubnodeOwner(bytes32 node, bytes32 label, address owner)
function setResolver(bytes32 node, address resolver)
function setTTL(bytes32 node, uint64 ttl)
function supportsInterface(bytes4 interfaceID) constant returns (bool)
function addr(bytes32 node) constant returns (address)
function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success)
function textFor(bytes32 _code) external view returns (string _text)
function set(Localization _localization)
function textFor(bytes32 _code) external view returns (bool _wasFound, string _text)
function identityExists(uint ein) public view returns (bool)
function hasIdentity(address _address) public view returns (bool)
function getEIN(address _address) public view returns (uint ein)
function isAssociatedAddressFor(uint ein, address _address) public view returns (bool)
function isProviderFor(uint ein, address provider) public view returns (bool)
function isResolverFor(uint ein, address resolver) public view returns (bool)
function getIdentity(uint ein)
function createIdentity(address recoveryAddress, address[] memory providers, address[] memory resolvers)
function removeAssociatedAddress()
function removeAssociatedAddressDelegated(address addressToRemove, uint8 v, bytes32 r, bytes32 s, uint timestamp)
function addProviders(address[] memory providers)
function addProvidersFor(uint ein, address[] memory providers)
function removeProviders(address[] memory providers)
function removeProvidersFor(uint ein, address[] memory providers)
function addResolvers(address[] memory resolvers)
function addResolversFor(uint ein, address[] memory resolvers)
function removeResolvers(address[] memory resolvers)
function removeResolversFor(uint ein, address[] memory resolvers)
function triggerRecoveryAddressChange(address newRecoveryAddress)
function triggerRecoveryAddressChangeFor(uint ein, address newRecoveryAddress)
function triggerRecovery(uint ein, address newAssociatedAddress, uint8 v, bytes32 r, bytes32 s, uint timestamp)
function triggerDestruction(uint ein, address[] memory firstChunk, address[] memory lastChunk, bool clearResolvers)
function F(uint32 rounds, bytes32[2] memory h, bytes32[4] memory m, bytes8[2] memory t, bool f) public view returns (bytes32[2] memory)
function callF() public view returns (bytes32[2] memory)
function hasAttribute(address account, uint256 attributeTypeID) external view returns (bool)
function getAttributeValue(address account, uint256 attributeTypeID) external view returns (uint256)
function countAttributeTypes() external view returns (uint256)
function getAttributeTypeID(uint256 index) external view returns (uint256)
function state(bytes32 _hash) constant returns (Mode)
function entries(bytes32 _hash) constant returns (Mode, address, uint, uint, uint)
function getAllowedTime(bytes32 _hash) constant returns (uint timestamp)
function isAllowed(bytes32 _hash, uint _timestamp) constant returns (bool allowed)
function startAuction(bytes32 _hash)
function startAuctions(bytes32[] _hashes)
function shaBid(bytes32 hash, address owner, uint value, bytes32 salt) constant returns (bytes32 sealedBid)
function newBid(bytes32 sealedBid)
function startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid)
function unsealBid(bytes32 _hash, address _owner, uint _value, bytes32 _salt)
function cancelBid(bytes32 seal)
function finalizeAuction(bytes32 _hash)
function transfer(bytes32 _hash, address newOwner)
function releaseDeed(bytes32 _hash)
function invalidateName(string unhashedName)
function eraseNode(bytes32[] labels)
function transferRegistrars(bytes32 _hash) onlyOwner(_hash)
function balanceOf(uint256 _streamId, address _addr)
function getStream(uint256 _streamId) returns (address sender, address recipient, address tokenAddress, uint256 balance, uint256 startBlock, uint256 stopBlock, uint256 payment, uint256 interval)
function create(address _recipient, address _tokenAddress, uint256 _startBlock, uint256 _stopBlock, uint256 _payment, uint256 _interval)
function withdraw(uint256 _streamId, uint256 _funds)
function redeem(uint256 _streamId)
function update(uint256 _streamId, address _tokenAddress, uint256 _stopBlock, uint256 _payment, uint256 _interval)
function confirmUpdate(uint256 _streamId, address _tokenAddress, uint256 _stopBlock, uint256 _payment, uint256 _interval)
function supportsInterface(bytes4 interfaceID) external view returns (bool)
function name() public view returns (string)
function totalSupply() public view returns (uint256)
function grantAuthority(address who)
function revokeAuthority(address who)
function hasAuthority(address who)
function issue(address who, uint256 validFrom, uint256 validTo)
function revoke(address who)
function hasValid(address who) external view returns (bool)
function purchase(uint256 validFrom, uint256 validTo)
function verifyIssuer(Know memory claim, uint8 v, bytes32 r, bytes32 s) public returns (address)
function vouch(Know memory claim, uint8 v, bytes32 r, bytes32 s) public returns (bool)
function interfaceHash(string _interfaceName) public pure returns(bytes32)
function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool)
function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool)
function updateERC165Cache(address _contract, bytes4 _interfaceId)
function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer)
function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address)
function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32)
function setManager(address _addr, address _newManager)
function getManager(address _addr) public view returns(address)
function interfaceImplementer(bytes32 node, bytes4 interfaceID) external view returns (address)
function signatureBasedExecution(address target, uint256 nonce, bytes memory payload, uint8 v, bytes32 r, bytes32 s)
function getSignatureBytes4(bytes32 identifier)
function getSignatureBytes32(bytes32 identifier)
function implementation() returns (address)
function addMinters(address _minter) external returns (bool)
function removeMinters(address _minter) external returns (bool)
function trigger() external isAuthorized returns (bool)
function withdraw() external isAuthorized returns (bool)
function readyToMint() public view returns (bool)
function calculateRewards() private returns (uint256)
function mintTokens() private returns (bool)
function calculateTPP(uint256 tokens) private returns (bool)
function updateRoundMask(uint256 tpp) private returns (bool)
function updateParticipantMask(address participant) private returns (bool)
function name() public view returns (string)
function symbol() public view returns (string)
function decimals() public view returns (uint8)
function totalSupply() public view returns (uint256)
function balanceOf(address _owner) public view returns (uint256 balance)
function transfer(address _to, uint256 _value) public returns (bool success)
function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)
function approve(address _spender, uint256 _value) public returns (bool success)
function allowance(address _owner, address _spender) public view returns (uint256 remaining)
function setup(bytes32 secretHash, address payable initiator, address tokenA, address tokenB, uint256 initiatorAssetAmount, address payable participant, uint256 participantAssetAmount, uint256 premiumAmount)
function initiate(bytes32 secretHash, uint256 assetRefundTime)
function fillPremium(bytes32 secretHash, uint256 premiumRefundTime)
function participate(bytes32 secretHash, uint256 assetRefundTime)
function redeemAsset(bytes32 secret, bytes32 secretHash)
function refundAsset(bytes32 secretHash)
function redeemPremium(bytes32 secretHash)
function refundPremium(bytes32 secretHash)
function addr(bytes32 node, uint coinType) external view returns(bytes memory)
function setAddr(bytes32 node, uint coinType, bytes calldata addr)
function keepTrackOfGas(string memory message, uint256 number)
function verifyGasLimit(uint256 desiredGasLimit, bytes memory signature, address signer, bytes memory someOtherData)
function getResolver(name)
function resolve(name, func, ...args)
function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s)
function nonces(address owner) external view returns (uint)
function DOMAIN_SEPARATOR() external view returns (bytes32)
function balanceOfOwner(address owner) public view returns (uint256)
function balanceOfUser(address user) public view returns (uint256)
function userOf(uint256 itemId) public view returns (address)
function ownerOf(uint256 itemId) public view returns (address)
function safeTransferOwner(address from, address to, uint256 itemId)
function safeTransferOwner(address from, address to, uint256 itemId, bytes memory data)
function safeTransferUser(address from, address to, uint256 itemId)
function safeTransferUser(address from, address to, uint256 itemId, bytes memory data)
function approveForOwner(address to, uint256 itemId)
function getApprovedForOwner(uint256 itemId) public view returns (address)
function approveForUser(address to, uint256 itemId)
function getApprovedForUser(uint256 itemId) public view returns (address)
function setApprovalForAll(address operator, bool approved)
function isApprovedForAll(address requester, address operator) public view returns (bool)
function approveLien(address to, uint256 itemId)
function getApprovedLien(uint256 itemId) public view returns (address)
function setLien(uint256 itemId)
function getCurrentLien(uint256 itemId) public view returns (address)
function revokeLien(uint256 itemId)
function approveTenantRight(address to, uint256 itemId)
function getApprovedTenantRight(uint256 itemId) public view returns (address)
function setTenantRight(uint256 itemId)
function getCurrentTenantRight(uint256 itemId) public view returns (address)
function revokeTenantRight(uint256 itemId)
function onERCXReceived(address operator, address from, uint256 itemId, uint256 layer, bytes memory data) public returns(bytes4)
function balanceOf(address owner) public view returns (uint256)
function ownerOf(uint256 itemId) public view returns (address)
function approve(address to, uint256 itemId)
function getApproved(uint256 itemId) public view returns (address)
function transferFrom(address from, address to, uint256 itemId)
function safeTransferFrom(address from, address to, uint256 itemId)
function safeTransferFrom(address from, address to, uint256 itemId, bytes memory data)
function totalNumberOfItems() public view returns (uint256)
function itemOfOwnerByIndex(address owner, uint256 index, uint256 layer)public view returns (uint256 itemId)
function itemByIndex(uint256 index) public view returns (uint256)
function itemURI(uint256 itemId) public view returns (string memory)
function name() external view returns (string memory)
function symbol() external view returns (string memory)
function registerRequestType(string typeName, string typeSuffix)
function isTrustedForwarder(address forwarder) external view returns(bool)
function nonceOf(address account) public view returns (uint256)
function nonceOf(address account) public view returns (uint256)
function deposit(address token, bytes calldata receiveAuthorization)
function HashToG1(msg)
function HashToBase(msg, dsp1, dsp2)
function BaseToG1(t)
function sign0(t)
function ConstantTimeEquality(a, b)
function HashToG2(msg)
function ClearCofactor(twistElement)
function BaseToTwist(t)
function iconUrl() external view returns (string memory)
function issuer() external view returns (address)
function claim(address from, uint256 consumption, uint256 epoch, bytes calldata signature)
function transferIssuer(address newIssuer)
function deposit(uint256 amount)
function withdraw(address to, uint256 amount)
function depositBalanceOf(address user) external view returns(uint256 depositBalance, uint256 epoch)
function deposit(uint256 value)
function withdraw(address to, uint256 value)
function depositBalanceOf(address user) override public view returns(uint256 depositBalance, uint256 epoch)
function claim(address from, uint credit, uint epoch, bytes memory signature)
function submitFraudProof(bytes calldata proof)
function maxGasPrice() public view returns (uint)
function transferFrom(address _from, address _to, Transaction[] calldata _transactions)
function transferAllowanceFrom(address _from,address _to, Transaction[] calldata _transactions)
function issue(address _to, Transaction[] calldata _transaction)
function redeem(address _from, Transaction[] calldata _transactions)
function burn(address _from, Transaction[] calldata _transactions)
function approve(address _spender, Transaction[] calldata _transactions)
function setApprovalFor(address _operator, bool _approved) external returns(bool approved)
function totalSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function redeemedSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function activeSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function burnedSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function balanceOf(address _account, uint256 classId, uint256 nonceId) external view returns (uint256)
function classMetadata(uint256 metadataId) external view returns (Metadata memory)
function nonceMetadata(uint256 classId, uint256 metadataId) external view returns (Metadata memory)
function classValues(uint256 classId, uint256 metadataId) external view returns (Values memory)
function nonceValues(uint256 classId, uint256 nonceId, uint256 metadataId) external view returns (Values memory)
function getProgress(uint256 classId, uint256 nonceId) external view returns (uint256 progressAchieved, uint256 progressRemaining)
function allowance(address _owner, address _spender, uint256 classId, uint256 nonceId) external returns(uint256)
function isApprovedFor(address _owner, address _operator) external view returns (bool)
function transferFrom(uint256 _fromTokenId, uint256 _toTokenId, uint256 _value)
function transferFrom(uint256 _fromTokenId, address _to, uint256 _value) external payable returns (uint256 toTokenId_)
function proposeTo(address implementation, bytes calldata data)
function upgrade(bytes calldata data)
function cancelUpgrade()
function prolongLock(uint b)
function setZeroTrustPeriod(uint blocks)
function transfer(address _to, uint256 _amount) public override whenNotPaused returns (bool)
function balanceOf(address addr) public view returns(uint balance)
function balanceOfWithProof(bytes calldata response, bytes calldata extraData) public view returns(uint balance)
function balanceOf(address addr) public view returns(uint balance)
function compress(uint256 full) public pure returns (uint64 cint)
function decompress(uint64 cint) public pure returns (uint256 full)
function decompressRoundingUp(uint64 cint) public pure returns (uint256 full)
function handleOps(UserOperation[] calldata ops, address payable beneficiary)
function simulateValidation(UserOperation calldata userOp)
function addStake(uint32 _unstakeDelaySec)
function unlockStake()
function withdrawStake(address payable withdrawAddress)
function balanceOf(address account) public view returns (uint256)
function depositTo(address account)
function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount)
function transfer(address to, uint256 tokenId) external returns (bool success)
function transfer(address to, uint256 tokenId) public virtual returns (bool success)
function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external pure returns (bytes4)
function resolve(string[] calldata splitName, IDomain root) public view returns (address)
function getNomination(address _nominator) external view returns (address proxy)
function getNominationForCaller() external view returns (address proxy)
function mint(address to, NFTToken[] memory nfttoken, address tokenType)
function reversePayment(uint256 paymentId, string memory tokenType) public virtual returns (bool)
function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data)
function upgradeSource() external view returns(address)
function upgradeDestination() external view returns(address)
function isUpgradeActive() external view returns(bool)
function isDowngradeActive() external view returns(bool)
function ratio() external view returns(uint256, uint256)
function totalUpgraded() external view returns(uint256)
function computeUpgrade(uint256 sourceAmount)
function computeDowngrade(uint256 destinationAmount)
function upgrade(address _to, uint256 sourceAmount)
function downgrade(address _to, uint256 destinationAmount)
function hob(uint x, uint y) returns (uint hi)
function exchangeRate() external view returns (uint256 res)
function getTokensIn() external view returns (address[] memory res)
function getTokensOut() external view returns (address[] memory res)
function yieldToken() external view returns (address)
function previewDeposit(address tokenIn, uint256 amountTokenToDeposit)
function previewRedeem(address tokenOut, uint256 amountSharesToRedeem)
function list(uint256 tokenId, uint256 salePrice)
function unlist(uint256 tokenId)
function buy(uint256 tokenId)
function transferFrom(address from, address to, uint256 tokenId, uint256 soldPrice)
function _distributeFR(uint256 tokenId, uint256 soldPrice)
function releaseFR(address payable account)
function unwrap(uint256 tokenId, address to)
function claimForcedSale()
function escrowFund(address _to, uint256 _value) public returns (bool)
function escrowRefund(address _from, uint256 _value) public returns (bool)
function escrowWithdraw() public returns (bool)
function isRevoked(address namespace, bytes32 list, bytes32 key) public view returns (bool)
function changeStatus(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey)
function changeStatusSigned(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey, address signer, bytes calldata signature)
function changeStatusDelegated(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey)
function changeStatusDelegatedSigned(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey, address signer, bytes calldata signature)
function changeStatusesInList(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys)
function changeStatusesInListSigned(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys, address signer, bytes calldata signature)
function changeStatusesInListDelegated(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys)
function changeStatusesInListDelegatedSigned(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys, address signer, bytes calldata signature)
function listIsRevoked(address namespace, bytes32 revocationList) view public returns (bool)
function changeListStatus(bool revoked, address namespace, bytes32 revocationList)
function changeListStatusSigned(bool revoked, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function changeListOwner(address newOwner, address namespace, bytes32 revocationList)
function changeListOwnerSigned(address newOwner, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function addListDelegate(address delegate, address namespace, bytes32 revocationList)
function addListDelegateSigned(address delegate, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function removeListDelegate(address delegate, address owner, bytes32 revocationList)
function removeListDelegateSigned(address delegate, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function logCommercialExploitation(uint256 tokenId, string calldata uri)
function copyrightOwner(uint256 tokenId)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, address a)
function getAlternativeSignature(bytes32 _digest) external view returns (string)
function commit(bytes32 commitment)
function commit(bytes32 commitment, bytes calldata data)
function balanceOfMatured(address user) external view returns (uint256)
function getMints(address user) external view returns (MintMetadata[] memory)
function mints(address user, uint256 id) external view returns (MintMetadata memory)
function cnNew(int128 _Real, int128 _Imag) public pure returns (bytes32)
function RealIm(bytes32 _cn)  public pure returns (int128 Real, int128 Imag)
function inceptTrade(string memory _tradeData, string memory _initialSettlementData)
function confirmTrade(string memory _tradeData, string memory _initialSettlementData)
function initiatePrefunding()
function initiateSettlement()
function performSettlement(int256 settlementAmount, string memory settlementData)
function requestTradeTermination(string memory tradeId)
function confirmTradeTermination(string memory tradeId)
function hashStruct(Mail memory mail) pure returns (bytes32 hash)
function hashStruct(Mail memory mail) pure returns (bytes32 hash)
function execute(uint256 operationType, address target, uint256 value, bytes memory data) external payable returns(bytes memory)
function execute(uint256[] memory operationsType, address[] memory targets, uint256[] memory values, bytes[] memory datas) external payable returns(bytes[] memory)
function getData(bytes32 dataKey) external view returns(bytes memory)
function getData(bytes32[] memory dataKeys) external view returns(bytes[] memory)
function setData(bytes32 dataKey, bytes memory dataValue)
function setData(bytes32[] memory dataKeys, bytes[] memory dataValues)
function name() external view returns (string memory)
function symbol() external view returns (string memory)
function totalSupply() external view returns (uint256)
function balanceOf(address holder) external view returns (uint256)
function granularity() external view returns (uint256)
function defaultOperators() external view returns (address[] memory)
function authorizeOperator(address operator)
function revokeOperator(address operator)
function send(address to, uint256 amount, bytes calldata data)
function burn(uint256 amount, bytes calldata data)
function isAlive() constant returns (bool alive)
function getBlockOfDeath() constant returns (uint256 block)
function getType() constant returns (uint8 type)
function interfaceHash(string _interfaceName) public pure returns(bytes32)
function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool)
function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool)
function updateERC165Cache(address _contract, bytes4 _interfaceId)
function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer)
function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) public view returns (address)
function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) view public returns(bytes32)
function setManager(address _addr, address _newManager)
function getManager(address _addr) public view returns(address)
function exchangeToken(address _targetContract, uint _amount) public returns(bool success, uint creditedAmount)
function exchangeAndSpend(address _targetContract, uint _amount,address _to) public returns(bool success)
function __exchangerCallback(address _targetContract,address _exchanger, uint _amount) public returns(bool success)
function registerToken(address _token) public returns(bool success)
function exchangeToken(address _targetContract, uint _amount, address _from) public returns(bool success, uint creditedAmount)
function exchangeAndSpend(address _targetContract, uint _amount, address _from, address _to) public returns(bool success)
function check(address _token, address _subject) public returns (byte _resultCode)
function check(address token, address from, address to, uint256 amount) public returns (byte resultCode)
function approve(address spender, uint amount) public returns (bool success)
function hash(uint256 nonce) public returns (bytes32 digest)
function getAdjustmentInterval() public view returns (uint)
function getChallengeNumber() public view returns (bytes32)
function getMiningDifficulty() public view returns (uint)
function getMiningReward() public view returns (uint)
function prepareDelegatedMintTxn(nonce, account)
function supportsInterface(bytes4 interfaceID) constant returns (bool)
function canCall(address owner, address caller, address callee, bytes4 func) view returns(bool)
function authoriseCaller(address owner, address caller, address callee, bytes4 func)
function revokeCaller(address owner, address caller, address callee, bytes4 func)
function approve(address _approved, uint256 _tokenId)
function getApproved(uint256 _tokenId) public view returns (address)
function rootOwnerOf(uint256 _tokenId) public view returns (bytes32 rootOwner)
function tokenFallback(address _from, uint256 _value, bytes _data)
function rootOwnerOf(uint256 _tokenId) public view returns (bytes32 rootOwner)
function _mint(address to, uint256 tokenId)
function tokenTransfer(IERC20 token, address recipient, uint256 amount)
function administratorOf(uint256 _tokenId) external view returns (address)
function initAdministratorChange(uint256 _tokenId, address _to, string calldata _extradata)
function proposedAdministratorOf(uint256 _tokenId) external view returns (address)
function cancelAdministratorChange(uint256 _tokenId, string calldata _extradata)
function acceptAdministratorChange(uint256 _tokenId, string calldata _extradata)
function pendingAdministratorOf(uint256 _tokenId) external view returns(address)
function cancelAdministratorChangeAccept(uint256 _tokenId, string calldata _extradata)
function finishAdministratorChange(uint256 _tokenId, string calldata _extradata)
function operatingAgreementOf(uint256 _tokenId) external view returns(string)
function initOperatingAgreementChange(uint256 _tokenId, string calldata _updatedAgreementHash, string calldata _extradata)
function pendingOperatingAgreementOf(uint256 _tokenId) external view returns(address _proposer, string _updatedAgreementHash)
function cancelOperatingAgreementChange(uint256 _tokenId, string calldata _extradata)
function finishOperatingAgreementChange(uint256 _tokenId, string calldata _updatedAgreementHash, string calldata _extradata)
function initPayment(uint256 _tokenId, address _paymentToken, uint256 _amount, bool _decreaseAmtOwed, string  calldata _extradata)
function pendingPaymentOf(uint256 _tokenId, address _paymentToken) external view returns (uint256 _amount, address _receiver, uint256 _timestamp)
function finishPayment(uint256 _tokenId, address _paymentToken, uint256 _amount, string calldata _extradata)
function paymentIsDelinquent(uint256 _tokenId, address _paymentToken) external view returns (bool)
function isRepossessed(uint256 _tokenId) external view returns(bool _repossessed, uint256 _amount)
function initRepossess(uint256 _tokenId, address _token, string calldata _extradata)
function pendingRepossess(uint256 _tokenID) external view returns(bool)
function cancelRepossess(uint256 _tokenId, string calldata _extradata)
function finishRepossess(uint256 _tokenId, string calldata _extradata)
function claimRepossess(uint256 _tokenId)
function write(bytes memory name, bytes memory data)
function read(bytes memory name) external view returns (bytes memory data, bool exist)
function size(bytes memory name) external view returns (uint256 size, uint256 chunks)
function remove(bytes memory name) external returns (uint256 numOfChunksRemoved)
function countChunks(bytes memory name) external view returns (uint256 numOfChunks)
function readChunk(bytes memory name, uint256 chunkId) external view returns (bytes memory chunkData, bool exist)
function chunkSize(bytes memory name, uint256 chunkId) external view returns (uint256 chunkSize, bool exist)
function removeChunk(bytes memory name, uint256 chunkId) external returns (bool exist)
function truncate(bytes memory name, uint256 chunkId) external returns (uint256 numOfChunksRemoved)
function getChunkHash(bytes memory name, uint256 chunkId) external view returns (bytes32)
function eip712Domain()
function buildBasicDomain(fields, name, version, chainId, verifyingContract, salt)
