function BaseToG1(t)
function BaseToTwist(t)
function ClearCofactor(twistElement)
function ConstantTimeEquality(a, b)
function DOMAIN_SEPARATOR() external view returns (bytes32)
function F(uint32 rounds, bytes32[2] memory h, bytes32[4] memory m, bytes8[2] memory t, bool f) public view returns (bytes32[2] memory)
function HashToBase(msg, dsp1, dsp2)
function HashToG1(msg)
function HashToG2(msg)
function RealIm(bytes32 _cn)  public pure returns (int128 Real, int128 Imag)
function __exchangerCallback(address _targetContract,address _exchanger, uint _amount) public returns(bool success)
function _distributeFR(uint256 tokenId, uint256 soldPrice)
function _mint(address to, uint256 tokenId)
function about() view returns (address _erc20, uint256 _up, uint256 _down)
function aboutItem(uint256 _item) view returns (uint256 _price, uint256 _up, uint256 _down)
function activeSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function addDelegate(address identity, bytes32 delegateType, address delegate, uint validity)
function addDelegateSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 delegateType, address delegate, uint validity)
function addListDelegate(address delegate, address namespace, bytes32 revocationList)
function addListDelegateSigned(address delegate, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function addMinters(address _minter) external returns (bool)
function addProviders(address[] memory providers)
function addProvidersFor(uint ein, address[] memory providers)
function addResolvers(address[] memory resolvers)
function addResolversFor(uint ein, address[] memory resolvers)
function addStake(uint32 _unstakeDelaySec)
function addr(bytes32 node) constant returns (address)
function addr(bytes32 node, uint coinType) external view returns(bytes memory)
function allowApproval(uint256 _time) external returns (bool)
function allowApproval(uint256 _time, uint256 _numberOfTransfers) external returns (bool)
function allowTransfer(uint256 _amount, uint256 _time, address _to, bool _allFunds) external returns (bool)
function allowTransfer(uint256 _tokenId, uint256 _time, address _to, bool _anyToken) external returns (bool)
function allowance(address _owner, address _spender) public view returns (uint256 remaining)
function allowance(address _owner, address _spender, uint256 classId, uint256 nonceId) external returns(uint256)
function appCode(Sleep _state) returns (byte code)
function appCode(Sleep _state) returns (byte code)
function approve(address _approved, uint256 _tokenId)
function approve(address _spender, Transaction[] calldata _transactions)
function approve(address _spender, uint256 _amount) external returns (bool)
function approve(address _spender, uint256 _value) public returns (bool success)
function approve(address _spender, uint256 _value) public returns (bool success)
function approve(address _spender, uint256 _value, address _authorizer) public returns (bool success)
function approve(address _to, uint256 _classId, uint256 quantity)
function approve(address _to, uint256 _tokenId) public virtual override(ERC721, IERC721)
function approve(address spender, uint amount) public returns (bool success)
function approve(address to, uint256 itemId)
function approveAbstract(address spenderForwarder, address spenderAddress, uint256 amount)
function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success)
function approveForOwner(address to, uint256 itemId)
function approveForToken(uint256 classIdHeld, uint256 quantityHeld, uint256 classIdWanted, uint256 quantityWanted)
function approveForUser(address to, uint256 itemId)
function approveLien(address to, uint256 itemId)
function approveTenantRight(address to, uint256 itemId)
function authoriseCaller(address owner, address caller, address callee, bytes4 func)
function authorizeOperator(address operator)
function balanceOf(address _account, uint256 classId, uint256 nonceId) external view returns (uint256)
function balanceOf(address _erc20) public constant returns (uint256 balance)
function balanceOf(address _erc20) public constant returns (uint256 balance)
function balanceOf(address _owner) public view returns (uint256 balance)
function balanceOf(address _owner) view returns (uint256 balance)
function balanceOf(address _owner, uint256 _classId) constant returns (uint256 balance)
function balanceOf(address account) public view returns (uint256)
function balanceOf(address addr) public view returns(uint balance)
function balanceOf(address addr) public view returns(uint balance)
function balanceOf(address holder) external view returns (uint256)
function balanceOf(address owner) public view returns (uint256)
function balanceOf(uint256 _streamId, address _addr)
function balanceOfMatured(address user) external view returns (uint256)
function balanceOfOwner(address owner) public view returns (uint256)
function balanceOfUser(address user) public view returns (uint256)
function balanceOfWithProof(bytes calldata response, bytes calldata extraData) public view returns(uint balance)
function buildBasicDomain(fields, name, version, chainId, verifyingContract, salt)
function burn(address _from, Transaction[] calldata _transactions)
function burn(uint256 amount, bytes calldata data)
function burnedSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function buy(uint256 tokenId)
function calculateRewards() private returns (uint256)
function calculateTPP(uint256 tokens) private returns (bool)
function callF() public view returns (bytes32[2] memory)
function canBuy(address _who, uint256 _item) public constant returns (bool _canBuy)
function canCall(address owner, address caller, address callee, bytes4 func) view returns(bool)
function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32)
function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) view public returns(bytes32)
function cancelBid(bytes32 seal)
function cancelUpgrade()
function changeListOwner(address newOwner, address namespace, bytes32 revocationList)
function changeListOwnerSigned(address newOwner, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function changeListStatus(bool revoked, address namespace, bytes32 revocationList)
function changeListStatusSigned(bool revoked, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function changeOwner(address identity, address newOwner)
function changeOwnerSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, address newOwner)
function changeStatus(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey)
function changeStatusDelegated(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey)
function changeStatusDelegatedSigned(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey, address signer, bytes calldata signature)
function changeStatusSigned(bool revoked, address namespace, bytes32 revocationList, bytes32 revocationKey, address signer, bytes calldata signature)
function changeStatusesInList(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys)
function changeStatusesInListDelegated(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys)
function changeStatusesInListDelegatedSigned(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys, address signer, bytes calldata signature)
function changeStatusesInListSigned(bool[] memory revoked, address namespace, bytes32 revocationList, bytes32[] memory revocationKeys, address signer, bytes calldata signature)
function changeTargetContract(address)
function chargeback(uint256 pendingTransferNumber) returns (bool success)
function check(address _token, address _subject) public returns (byte _resultCode)
function check(address token, address from, address to, uint256 amount) public returns (byte resultCode)
function chunkSize(bytes memory name, uint256 chunkId) external view returns (uint256 chunkSize, bool exist)
function claim(address from, uint credit, uint epoch, bytes memory signature)
function claim(address from, uint256 consumption, uint256 epoch, bytes calldata signature)
function claimForcedSale()
function claimLost() returns (bool success)
function claimLost(address lostAccount) returns (bool success)
function classMetadata(uint256 metadataId) external view returns (Metadata memory)
function className(uint256 classId) constant returns (string name)
function classValues(uint256 classId, uint256 metadataId) external view returns (Values memory)
function classesOwned(address _owner) constant returns (uint256[] classes)
function cnNew(int128 _Real, int128 _Imag) public pure returns (bytes32)
function commit(bytes32 commitment)
function commit(bytes32 commitment, bytes calldata data)
function commit(string memory assetCid, string memory commitData) public returns (uint256 blockNumber)
function commitForceWithdraw(uint256 requestID)
function compress(uint256 full) public pure returns (uint64 cint)
function computeDowngrade(uint256 destinationAmount)
function computeUpgrade(uint256 sourceAmount)
function confirmTrade(string memory _tradeData, string memory _initialSettlementData)
function confirmTradeTermination(string memory tradeId)
function confirmUpdate(uint256 _streamId, address _tokenAddress, uint256 _stopBlock, uint256 _payment, uint256 _interval)
function copyrightOwner(uint256 tokenId)
function countAttributeTypes() external view returns (uint256)
function countChunks(bytes memory name) external view returns (uint256 numOfChunks)
function create(address _recipient, address _tokenAddress, uint256 _startBlock, uint256 _stopBlock, uint256 _payment, uint256 _interval)
function createIdentity(address recoveryAddress, address[] memory providers, address[] memory resolvers)
function createShop(address _erc20) public returns (address _shop)
function createWallet() public returns (address _wallet)
function decimals() public view returns (uint8)
function decimals() view returns (uint8 _decimals)
function decisionAssembly() returns (address)
function decompress(uint64 cint) public pure returns (uint256 full)
function decompressRoundingUp(uint64 cint) public pure returns (uint256 full)
function decreaseAllowance(address _spender, uint256 _subtractedValue) external returns (bool)
function defaultOperators() external view returns (address[] memory)
function deposit(address token, bytes calldata receiveAuthorization)
function deposit(address token, uint256 amount)
function deposit(uint256 amount)
function deposit(uint256 value)
function depositBalanceOf(address user) external view returns(uint256 depositBalance, uint256 epoch)
function depositBalanceOf(address user) override public view returns(uint256 depositBalance, uint256 epoch)
function depositTo(address account)
function dnVote()
function dnVoteItem(uint256 _item)
function downgrade(address _to, uint256 destinationAmount)
function eip712Domain()
function entries(bytes32 _hash) constant returns (Mode, address, uint, uint, uint)
function eraseNode(bytes32[] labels)
function escrowFund(address _to, uint256 _value) public returns (bool)
function escrowRefund(address _from, uint256 _value) public returns (bool)
function escrowWithdraw() public returns (bool)
function exchange(address to, uint256 classIdPosted, uint256 quantityPosted, uint256 classIdWanted, uint256 quantityWanted)
function exchangeAndSpend(address _targetContract, uint _amount, address _from, address _to) public returns(bool success)
function exchangeAndSpend(address _targetContract, uint _amount,address _to) public returns(bool success)
function exchangeRate() external view returns (uint256 res)
function exchangeToken(address _targetContract, uint _amount) public returns(bool success, uint creditedAmount)
function exchangeToken(address _targetContract, uint _amount, address _from) public returns(bool success, uint creditedAmount)
function execute(uint256 operationType, address target, uint256 value, bytes memory data) external payable returns(bytes memory)
function execute(uint256[] memory operationsType, address[] memory targets, uint256[] memory values, bytes[] memory datas) external payable returns(bytes[] memory)
function executeDecision(uint)
function executeGasRelay(bytes calldata _execData, uint256 _gasPrice, uint256 _gasLimit, address _gasToken, address _gasRelayer, bytes calldata _signature)
function executeGasRelayERC191Msg(uint256 _nonce, bytes memory _execData, uint256 _gasPrice, uint256 _gasLimit, address _gasToken, address _gasRelayer) public view returns (bytes memory)
function executeGasRelayMsg(uint256 _nonce, bytes memory _execData, uint256 _gasPrice, uint256 _gasLimit, address _gasToken, address _gasRelayer) public pure returns (bytes memory)
function fillPremium(bytes32 secretHash, uint256 premiumRefundTime)
function finalizeAuction(bytes32 _hash)
function generateReleaseId(string packageName, string version)
function generateReleaseId(string packageName, string version)
function generateStealthAddress(bytes memory stealthMetaAddress)
function getAdjustmentInterval() public view returns (uint)
function getAllPackageIds(uint offset, uint limit)
function getAllReleaseIds(string packageName, uint offset, uint limit)
function getAllowedTime(bytes32 _hash) constant returns (uint timestamp)
function getAlternativeSignature(bytes32 _digest) external view returns (string)
function getApprovalConditions(address _account) external view returns (ApprovalConditions memory)
function getApprovalConditions(address _account) external view returns (ApprovalConditions memory)
function getApproved(uint256 _tokenId) public view returns (address)
function getApproved(uint256 itemId) public view returns (address)
function getApprovedForOwner(uint256 itemId) public view returns (address)
function getApprovedForUser(uint256 itemId) public view returns (address)
function getApprovedLien(uint256 itemId) public view returns (address)
function getApprovedTenantRight(uint256 itemId) public view returns (address)
function getAttributeTypeID(uint256 index) external view returns (uint256)
function getAttributeValue(address account, uint256 attributeTypeID) external view returns (uint256)
function getBindings(address _account) external view returns (AccountHolderBindings memory)
function getBindings(address _account) external view returns (AccountHolderBindings memory)
function getBlockOfDeath() constant returns (uint256 block)
function getChallengeNumber() public view returns (bytes32)
function getChunkHash(bytes memory name, uint256 chunkId) external view returns (bytes32)
function getCurrentLien(uint256 itemId) public view returns (address)
function getCurrentTenantRight(uint256 itemId) public view returns (address)
function getData(bytes32 dataKey) external view returns(bytes memory)
function getData(bytes32[] memory dataKeys) external view returns(bytes[] memory)
function getEIN(address _address) public view returns (uint ein)
function getHoldingInfo(uint256 tokenId) external view returns (address holder, uint256 holdingTime)
function getIdentity(uint ein)
function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address)
function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) public view returns (address)
function getLostAccountRecoveryTimeInMinutes(address account) view returns (uint256 minutes)
function getManager(address _addr) public view returns(address)
function getManager(address _addr) public view returns(address)
function getMiningDifficulty() public view returns (uint)
function getMiningReward() public view returns (uint)
function getMints(address user) external view returns (MintMetadata[] memory)
function getNomination(address _nominator) external view returns (address proxy)
function getNominationForCaller() external view returns (address proxy)
function getPackageName(bytes32 packageId) public view returns (string packageName)
function getPendingTransferTime(address account) view returns (uint256 minutes)
function getProgress(uint256 classId, uint256 nonceId) external view returns (uint256 progressAchieved, uint256 progressRemaining)
function getReleaseData(bytes32 releaseId)
function getReleaseId(string packageName, string version) public view returns (bytes32 releaseId)
function getResolver(name)
function getSignatureBytes32(bytes32 identifier)
function getSignatureBytes4(bytes32 identifier)
function getStream(uint256 _streamId) returns (address sender, address recipient, address tokenAddress, uint256 balance, uint256 startBlock, uint256 stopBlock, uint256 payment, uint256 interval)
function getTokensIn() external view returns (address[] memory res)
function getTokensOut() external view returns (address[] memory res)
function getTransferableFunds(address _account) external view returns (TransferConditions memory)
function getTransferableFunds(address _account) external view returns (TransferConditions memory)
function getType() constant returns (uint8 type)
function givePostingPermission(address _newAnnouncer, bool _postingPrivileges, string _posterName) public onlyOwner returns(bool success)
function grant(address _grantee, string _invokes, uint _expireAt) public returns (bool success)
function grantAuthority(address who)
function granularity() external view returns (uint256)
function handleOps(UserOperation[] calldata ops, address payable beneficiary)
function hasAttribute(address account, uint256 attributeTypeID) external view returns (bool)
function hasAuthority(address who)
function hasIdentity(address _address) public view returns (bool)
function hasValid(address who) external view returns (bool)
function hash(uint256 nonce) public returns (bytes32 digest)
function hashStruct(Mail memory mail) pure returns (bytes32 hash)
function hashStruct(Mail memory mail) pure returns (bytes32 hash)
function hob(uint x, uint y) returns (uint hi)
function iconUrl() external view returns (string memory)
function identityExists(uint ein) public view returns (bool)
function identityOwner(address identity) public view returns(address)
function implementation() returns (address)
function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool)
function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool)
function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool)
function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool)
function inceptTrade(string memory _tradeData, string memory _initialSettlementData)
function increase() public returns (bool _available)
function increase() public returns (byte _status)
function increaseAllowance(address _spender, uint256 _addedValue) external returns (bool)
function individualSupply(uint256 _classId) constant returns (uint256 individualSupply)
function info(bytes _msgPack)
function infoItem(uint256 _item, bytes _msgPack)
function initiate(bytes32 secretHash, uint256 assetRefundTime)
function initiatePrefunding()
function initiateSettlement()
function interfaceHash(string _interfaceName) public pure returns(bytes32)
function interfaceHash(string _interfaceName) public pure returns(bytes32)
function interfaceImplementer(bytes32 node, bytes4 interfaceID) external view returns (address)
function invalidateName(string unhashedName)
function isAlive() constant returns (bool alive)
function isAllowed(bytes32 _hash, uint _timestamp) constant returns (bool allowed)
function isApprovedFor(address _owner, address _operator) external view returns (bool)
function isApprovedForAll(address requester, address operator) public view returns (bool)
function isAssociatedAddressFor(uint ein, address _address) public view returns (bool)
function isBuyer(address _who, uint256 _item) public constant returns (bool _buyer)
function isDowngradeActive() external view returns(bool)
function isInt(uint num) public pure returns (byte status)
function isProviderFor(uint ein, address provider) public view returns (bool)
function isResolverFor(uint ein, address resolver) public view returns (bool)
function isRevoked(address namespace, bytes32 list, bytes32 key) public view returns (bool)
function isShop(address _shop) public constant returns (bool)
function isTrustedForwarder(address forwarder) external view returns(bool)
function isUpgradeActive() external view returns(bool)
function isWallet(address _wallet) public constant returns (bool)
function issue(address _to, Transaction[] calldata _transaction)
function issue(address who, uint256 validFrom, uint256 validTo)
function issuer() external view returns (address)
function itemByIndex(uint256 index) public view returns (uint256)
function itemOfOwnerByIndex(address owner, uint256 index, uint256 layer)public view returns (uint256 itemId)
function itemURI(uint256 itemId) public view returns (string memory)
function keepTrackOfGas(string memory message, uint256 number)
function lastNonce() public returns (uint nonce)
function list(uint256 tokenId, uint256 salePrice)
function listIsRevoked(address namespace, bytes32 revocationList) view public returns (bool)
function lock(bytes32 _reason, uint256 _amount, uint256 _time) public returns (bool)
function logCommercialExploitation(uint256 tokenId, string calldata uri)
function maxGasPrice() public view returns (uint)
function mint(address to, NFTToken[] memory nfttoken, address tokenType)
function mintTokens() private returns (bool)
function mints(address user, uint256 id) external view returns (MintMetadata memory)
function multihash(bytes32 node) public view returns (bytes)
function name() constant returns (string name)
function name() external view returns (string memory)
function name() external view returns (string memory)
function name() public view returns (string)
function name() public view returns (string)
function name() view returns (string _name)
function newBid(bytes32 sealedBid)
function nonceMetadata(uint256 classId, uint256 metadataId) external view returns (Metadata memory)
function nonceOf(address account) public view returns (uint256)
function nonceOf(address account) public view returns (uint256)
function nonceValues(uint256 classId, uint256 nonceId, uint256 metadataId) external view returns (Values memory)
function nonces(address owner) external view returns (uint)
function numPackageIds() public view returns (uint totalCount)
function numReleaseIds(string packageName) public view returns (uint totalCount)
function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes calldata _data) external pure returns (bytes4)
function onERCXReceived(address operator, address from, uint256 itemId, uint256 layer, bytes memory data) public returns(bytes4)
function onPageLoad()
function onPageLoad()
function owner(bytes32 node) constant returns (address)
function ownerOf(uint256 itemId) public view returns (address)
function ownerOf(uint256 itemId) public view returns (address)
function participate(bytes32 secretHash, uint256 assetRefundTime)
function pay(uint256 _item) onlyWallet(msg.sender) public payable returns (bool success)
function payCancel(address _shop, uint256 _item) onlyOwner public returns (bool success)
function paySafe(address _shop, uint256 _item) onlyOwner onlyShop(_shop) public payable returns (bool success)
function payUnsafe(address _shop, uint256 _item) onlyOwner public payable returns (bool success)
function performSettlement(int256 settlementAmount, string memory settlementData)
function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s)
function postAnnouncement(string _message)
function prepareDelegatedMintTxn(nonce, account)
function prepareForceWithdraw(address token, uint256 amount) external returns (uint256 requestID)
function previewDeposit(address tokenIn, uint256 amountTokenToDeposit)
function previewRedeem(address tokenOut, uint256 amountSharesToRedeem)
function price(uint256 _item) public constant returns (address _erc20, uint256 _value)
function prolongLock(uint b)
function proposeTo(address implementation, bytes calldata data)
function purchase(uint256 validFrom, uint256 validTo)
function ratio() external view returns(uint256, uint256)
function read(bytes memory name) external view returns (bytes memory data, bool exist)
function readChunk(bytes memory name, uint256 chunkId) external view returns (bytes memory chunkData, bool exist)
function readPosts(uint256 _postNumber) public constant returns(string _author, string _post)
function readyToMint() public view returns (bool)
function redeem(address _from, Transaction[] calldata _transactions)
function redeem(uint256 _streamId)
function redeemAsset(bytes32 secret, bytes32 secretHash)
function redeemPremium(bytes32 secretHash)
function redeemedSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function reduceIssuance(uint)
function refund(address _buyer, uint256 _item, uint256 _value) onlyWallet(_buyer) onlyOwner public payable returns (bool success)
function refund(uint256 _item, uint256 _value) public payable returns (bool success)
function refundAsset(bytes32 secretHash)
function refundPremium(bytes32 secretHash)
function registerRequestType(string typeName, string typeSuffix)
function registerToken(address _token) public returns(bool success)
function regrant(address _grantee, string _invokes, uint _expireAt) public returns (bool success)
function release(string packageName, string version, string manifestURI)
function releaseDeed(bytes32 _hash)
function releaseFR(address payable account)
function remove(bytes memory name) external returns (uint256 numOfChunksRemoved)
function removeAnnouncement(uint256 _messageNumber, string _removalReason)
function removeAssociatedAddress()
function removeAssociatedAddressDelegated(address addressToRemove, uint8 v, bytes32 r, bytes32 s, uint timestamp)
function removeChunk(bytes memory name, uint256 chunkId) external returns (bool exist)
function removeListDelegate(address delegate, address owner, bytes32 revocationList)
function removeListDelegateSigned(address delegate, address namespace, bytes32 revocationList, address signer, bytes calldata signature)
function removeMinters(address _minter) external returns (bool)
function removeProviders(address[] memory providers)
function removeProvidersFor(uint ein, address[] memory providers)
function removeResolvers(address[] memory resolvers)
function removeResolversFor(uint ein, address[] memory resolvers)
function reportStolen() returns (bool success)
function requestTradeTermination(string memory tradeId)
function resetBindings() external returns (bool)
function resetBindings() external returns (bool)
function resister(uint8 _category, uint256 _price, uint256 _stock) onlyOwner public returns (uint256 _itemId)
function resolve(name, func, ...args)
function resolve(string[] calldata splitName, IDomain root) public view returns (address)
function resolver(bytes32 node) constant returns (address)
function reversePayment(uint256 paymentId, string memory tokenType) public virtual returns (bool)
function revoke(address _grantee) public returns (bool success)
function revoke(address who)
function revokeAttribute(address identity, bytes32 name, bytes value)
function revokeAttributeSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 name, bytes value)
function revokeAuthority(address who)
function revokeCaller(address owner, address caller, address callee, bytes4 func)
function revokeDelegate(address identity, bytes32 delegateType, address delegate)
function revokeDelegateSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 delegateType, address delegate)
function revokeLien(uint256 itemId)
function revokeOperator(address operator)
function revokeTenantRight(uint256 itemId)
function rootOwnerOf(uint256 _tokenId) public view returns (bytes32 rootOwner)
function rootOwnerOf(uint256 _tokenId) public view returns (bytes32 rootOwner)
function safeFallback() external returns (bool)
function safeFallback() external returns (bool)
function safeIncrement(uint8 interval) public returns (byte status, uint8 newCounter)
function safeTransferFrom(address _from, address _to, uint256 _tokenId) external returns (bool)
function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory data) external returns (bool)
function safeTransferFrom(address from, address to, uint256 itemId)
function safeTransferFrom(address from, address to, uint256 itemId, bytes memory data)
function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data)
function safeTransferOwner(address from, address to, uint256 itemId)
function safeTransferOwner(address from, address to, uint256 itemId, bytes memory data)
function safeTransferUser(address from, address to, uint256 itemId)
function safeTransferUser(address from, address to, uint256 itemId, bytes memory data)
function send(address to, uint256 amount, bytes calldata data)
function set(Localization _localization)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, address a)
function setAddr(bytes32 node, uint coinType, bytes calldata addr)
function setApprovalFor(address _operator, bool _approved) external returns(bool approved)
function setApprovalForAll(address _operator, bool _approved) public virtual override(ERC721, IERC721)
function setApprovalForAll(address operator, bool approved)
function setAttribute(address identity, bytes32 name, bytes value, uint validity)
function setAttributeSigned(address identity, uint8 sigV, bytes32 sigR, bytes32 sigS, bytes32 name, bytes value, uint validity)
function setData(bytes32 dataKey, bytes memory dataValue)
function setData(bytes32[] memory dataKeys, bytes[] memory dataValues)
function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer)
function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer)
function setLien(uint256 itemId)
function setLostAccountRecoveryTimeInMinutes(uint256 minutes) returns (bool success)
function setManager(address _addr, address _newManager)
function setManager(address _addr, address _newManager)
function setMultihash(bytes32 node, bytes hash) public only_owner(node)
function setOwner(bytes32 node, address owner)
function setPendingTransferTime(uint256 minutes) returns (bool success)
function setResolver(bytes32 node, address resolver)
function setSubnodeOwner(bytes32 node, bytes32 label, address owner)
function setTTL(bytes32 node, uint64 ttl)
function setTenantRight(uint256 itemId)
function setZeroTrustPeriod(uint blocks)
function setup(bytes32 secretHash, address payable initiator, address tokenA, address tokenB, uint256 initiatorAssetAmount, address payable participant, uint256 participantAssetAmount, uint256 premiumAmount)
function shaBid(bytes32 hash, address owner, uint value, bytes32 salt) constant returns (bytes32 sealedBid)
function sign0(t)
function signatureBasedExecution(address target, uint256 nonce, bytes memory payload, uint8 v, bytes32 r, bytes32 s)
function simulateValidation(UserOperation calldata userOp)
function size(bytes memory name) external view returns (uint256 size, uint256 chunks)
function startAuction(bytes32 _hash)
function startAuctions(bytes32[] _hashes)
function startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid)
function state(bytes32 _hash) constant returns (Mode)
function submitFraudProof(bytes calldata proof)
function supportsInterface(bytes4 interfaceID) constant returns (bool)
function supportsInterface(bytes4 interfaceID) constant returns (bool)
function supportsInterface(bytes4 interfaceID) external view returns (bool)
function symbol() constant returns (string symbol)
function symbol() external view returns (string memory)
function symbol() external view returns (string memory)
function symbol() public view returns (string)
function symbol() view returns (bytes32 _symbol)
function targetContract() returns (address)
function textFor(bytes32 _code) external view returns (bool _wasFound, string _text)
function textFor(bytes32 _code) external view returns (string _text)
function theNumberOfAnnouncements() public constant returns(uint256 _numberOfAnnouncements)
function tokenFallback(address _from, uint256 _value, bytes _data)
function tokenReceived(address _from, uint _value, bytes calldata _data)
function tokenTransfer(IERC20 token, address recipient, uint256 amount)
function totalBalanceOf(address _of)  view returns (uint256 amount)
function totalNumberOfItems() public view returns (uint256)
function totalSupply() constant returns (uint256 totalSupply)
function totalSupply() external view returns (uint256)
function totalSupply() public view returns (uint256)
function totalSupply() public view returns (uint256)
function totalSupply() view returns (uint256 totalSupply)
function totalSupply(uint256 classId, uint256 nonceId) external view returns (uint256)
function totalUpgraded() external view returns(uint256)
function transfer(address _to, uint _value) returns (bool)
function transfer(address _to, uint _value, bytes calldata _data) returns (bool)
function transfer(address _to, uint256 _amount) external returns (bool)
function transfer(address _to, uint256 _amount) public override whenNotPaused returns (bool)
function transfer(address _to, uint256 _classId, uint256 quantity)
function transfer(address _to, uint256 _value) public returns (bool success)
function transfer(address to, uint256 tokenId) external returns (bool success)
function transfer(address to, uint256 tokenId) public virtual returns (bool success)
function transfer(bytes32 _hash, address newOwner)
function transferAbstract(address toForwarder, address toAddress, uint256 amount)
function transferAllowanceFrom(address _from,address _to, Transaction[] calldata _transactions)
function transferFrom(address _from, address _to, Transaction[] calldata _transactions)
function transferFrom(address _from, address _to, uint256 _amount) external returns (bool)
function transferFrom(address _from, address _to, uint256 _tokenId) external returns (bool)
function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)
function transferFrom(address from, address to, uint256 itemId)
function transferFrom(address from, address to, uint256 tokenId, uint256 soldPrice)
function transferFrom(uint256 _fromTokenId, address _to, uint256 _value) external payable returns (uint256 toTokenId_)
function transferFrom(uint256 _fromTokenId, uint256 _toTokenId, uint256 _value)
function transferFromAbstract(address fromForwarder, address fromAddress, address toForwarder, address toAddress, uint256 amount)
function transferIssuer(address newIssuer)
function transferRegistrars(bytes32 _hash) onlyOwner(_hash)
function trigger() external isAuthorized returns (bool)
function triggerDestruction(uint ein, address[] memory firstChunk, address[] memory lastChunk, bool clearResolvers)
function triggerRecovery(uint ein, address newAssociatedAddress, uint8 v, bytes32 r, bytes32 s, uint timestamp)
function triggerRecoveryAddressChange(address newRecoveryAddress)
function triggerRecoveryAddressChangeFor(uint ein, address newRecoveryAddress)
function truncate(bytes memory name, uint256 chunkId) external returns (uint256 numOfChunksRemoved)
function ttl(bytes32 node) constant returns (uint64)
function unlist(uint256 tokenId)
function unlockStake()
function unsealBid(bytes32 _hash, address _owner, uint _value, bytes32 _salt)
function unwrap(uint256 tokenId, address to)
function upVote()
function upVoteItem(uint256 _item)
function update(uint256 _item, uint256 _price, uint256 _stock)
function update(uint256 _streamId, address _tokenAddress, uint256 _stopBlock, uint256 _payment, uint256 _interval)
function updateCallableFuncNames(string _invokes) public returns (bool success)
function updateERC165Cache(address _contract, bytes4 _interfaceId)
function updateERC165Cache(address _contract, bytes4 _interfaceId)
function updateParticipantMask(address participant) private returns (bool)
function updateRoundMask(uint256 tpp) private returns (bool)
function upgrade(address _to, uint256 sourceAmount)
function upgrade(bytes calldata data)
function upgradeDestination() external view returns(address)
function upgradeSource() external view returns(address)
function userOf(uint256 itemId) public view returns (address)
function validDelegate(address identity, bytes32 delegateType, address delegate) public view returns(bool)
function validateOwnership(address caller, uint256 value, bytes calldata)
function validateSignature(UserOperation calldata userOp, bytes32 userOpHash) external returns (uint256 validationData)
function verifyGasLimit(uint256 desiredGasLimit, bytes memory signature, address signer, bytes memory someOtherData)
function verifyIssuer(Know memory claim, uint8 v, bytes32 r, bytes32 s) public returns (address)
function vouch(Know memory claim, uint8 v, bytes32 r, bytes32 s) public returns (bool)
function withdraw() external isAuthorized returns (bool)
function withdraw(address to, uint256 amount)
function withdraw(address to, uint256 value)
function withdraw(address token, uint256 amount)
function withdraw(uint256 _streamId, uint256 _funds)
function withdrawStake(address payable withdrawAddress)
function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount)
function withdrawal(address _erc20, uint256 _value) onlyOwner public returns (bool success)
function withdrawal(address _erc20, uint256 _value) onlyOwner public returns (bool success)
function write(bytes memory name, bytes memory data)
function yieldToken() external view returns (address)
